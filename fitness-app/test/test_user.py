import unittest
import logging
from src.model.user import User

logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

class TestUser(unittest.TestCase):
    def test_create_user(self):
        logging.info("üîπ –¢–µ—Å—Ç: —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        user = User("Alex", 25, "alex@example.com")

        with self.subTest(msg="–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"):
            self.assertEqual(user.name, "Alex")
            logging.info("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ")

        with self.subTest(msg="–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"):
            self.assertEqual(user.age, 25)
            logging.info("–í–æ–∑—Ä–∞—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π")

        with self.subTest(msg="–ü—Ä–æ–≤–µ—Ä–∫–∞ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"):
            self.assertEqual(user.email, "alex@example.com")
            logging.info("Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π")

        logging.info("–¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n")
