import unittest
import logging
from src.model.workout import Workout

logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

class TestWorkout(unittest.TestCase):
    def test_workout_init(self):
        logging.info("üîπ –¢–µ—Å—Ç: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏")
        workout = Workout("–ö–∞—Ä–¥–∏–æ", 30)

        with self.subTest(msg="–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏"):
            self.assertEqual(workout.type, "–ö–∞—Ä–¥–∏–æ")
            logging.info("–¢–∏–ø —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π: –ö–∞—Ä–¥–∏–æ")

        with self.subTest(msg="–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏"):
            self.assertEqual(workout.duration, 30)
            logging.info("–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è: 30 –º–∏–Ω—É—Ç")

        logging.info("–¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: –æ–±—ä–µ–∫—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n")

if __name__ == "__main__":
    unittest.main(verbosity=2)
