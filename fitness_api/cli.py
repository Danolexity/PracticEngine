import requests
import subprocess



API_URL = "http://127.0.0.1:8001/api"
access_token = None
refresh_token = None



def notify(message):
    subprocess.run(["python", "notify_bot.py", message])



def auth_headers():
    return {"Authorization": f"Bearer {access_token}"}


def refresh_access_token():
    global access_token, refresh_token
    response = requests.post(f"{API_URL}/auth/refresh/", json={
        "refresh": refresh_token
    })
    if response.status_code == 200:
        access_token = response.json()["access"]
        print("üîÅ –¢–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª—ë–Ω.")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω:", response.text)
        exit()


def protected_request(method, url, **kwargs):
    global access_token
    response = requests.request(method, url, headers=auth_headers(), **kwargs)
    if response.status_code == 401 and "token_not_valid" in response.text:
        print("‚ö†Ô∏è –¢–æ–∫–µ–Ω –ø—Ä–æ—Å—Ä–æ—á–µ–Ω. –û–±–Ω–æ–≤–ª—è—é...")
        refresh_access_token()
        response = requests.request(method, url, headers=auth_headers(), **kwargs)
    return response


def register():
    print("\n=== –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ===")
    username = input("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ")
    email = input("Email: ")
    age = input("–í–æ–∑—Ä–∞—Å—Ç: ")
    password = input("–ü–∞—Ä–æ–ª—å: ")
    password2 = input("–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ")

    response = requests.post(f"{API_URL}/auth/register/", json={
        "username": username,
        "email": email,
        "age": age,
        "password": password,
        "password2": password2
    })

    if response.status_code == 201:
        print("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ.")
    else:
        print("‚ùå –û—à–∏–±–∫–∞:", response.text)
        exit()


def login():
    global access_token, refresh_token
    print("\n=== –í—Ö–æ–¥ ===")
    username = input("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ")
    password = input("–ü–∞—Ä–æ–ª—å: ")

    response = requests.post(f"{API_URL}/auth/login/", json={
        "username": username,
        "password": password
    })

    if response.status_code == 200:
        tokens = response.json()
        access_token = tokens["access"]
        refresh_token = tokens["refresh"]
        print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥.")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:", response.text)
        exit()


def show_summary():
    user = protected_request("get", f"{API_URL}/auth/me/").json()
    workouts = protected_request("get", f"{API_URL}/workouts/").json()
    nutrition = protected_request("get", f"{API_URL}/nutrition/").json()

    total_duration = sum(w["duration"] for w in workouts)
    total_calories = sum(f["calories"] for f in nutrition)

    print(f"\n--- –û—Ç—á—ë—Ç –¥–ª—è {user['username']} ---")
    print(f"–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: {len(workouts)}, –û–±—â–µ–µ –≤—Ä–µ–º—è: {total_duration} –º–∏–Ω—É—Ç")
    print(f"–ü—Ä–æ–¥—É–∫—Ç–æ–≤: {len(nutrition)}, –°—ä–µ–¥–µ–Ω–æ –∫–∞–ª–æ—Ä–∏–π: {total_calories}")


def list_items(endpoint):
    response = protected_request("get", f"{API_URL}/{endpoint}/")
    if response.status_code == 200:
        return response.json()
    else:
        print("‚ùå –û—à–∏–±–∫–∞:", response.text)
        exit()


def add_workout():
    print("\n=== –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ ===")
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã: –ö–∞—Ä–¥–∏–æ, –°–∏–ª–æ–≤–∞—è, –ô–æ–≥–∞, –ü–ª–∞–≤–∞–Ω–∏–µ, –ë–µ–≥")
    workout_type = input("–¢–∏–ø —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: ")
    duration = input("–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–º–∏–Ω): ")

    response = protected_request("post", f"{API_URL}/workouts/", json={
        "workout_type": workout_type,
        "duration": duration
    })

    if response.status_code == 201:
        print("‚úÖ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞.")
        notify(f"–î–æ–±–∞–≤–ª–µ–Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞: {workout_type}, {duration} –º–∏–Ω.")
    else:
        print("‚ùå –û—à–∏–±–∫–∞:", response.text)
        exit()


def edit_workout():
    print("\n=== –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ ===")
    workouts = list_items("workouts")
    for w in workouts:
        print(f"{w['id']}: {w['workout_type']}, {w['duration']} –º–∏–Ω")

    workout_id = input("–í–≤–µ–¥–∏—Ç–µ ID —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ")
    new_type = input("–ù–æ–≤—ã–π —Ç–∏–ø —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: ")
    new_duration = input("–ù–æ–≤–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–º–∏–Ω): ")

    response = protected_request("patch", f"{API_URL}/workouts/{workout_id}/", json={
        "workout_type": new_type,
        "duration": new_duration
    })

    if response.status_code == 200:
        print("‚úÖ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")
        notify(f"–û–±–Ω–æ–≤–ª–µ–Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ ID {workout_id}: {new_type}, {new_duration} –º–∏–Ω.")
    else:
        print("‚ùå –û—à–∏–±–∫–∞:", response.text)
        exit()


def delete_workout():
    print("\n=== –£–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ ===")
    workouts = list_items("workouts")
    for w in workouts:
        print(f"{w['id']}: {w['workout_type']}, {w['duration']} –º–∏–Ω")

    workout_id = input("–í–≤–µ–¥–∏—Ç–µ ID —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ")

    response = protected_request("delete", f"{API_URL}/workouts/{workout_id}/")
    if response.status_code == 204:
        print("‚úÖ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —É–¥–∞–ª–µ–Ω–∞.")
        notify(f"–£–¥–∞–ª–µ–Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ ID {workout_id}.")
    else:
        print("‚ùå –û—à–∏–±–∫–∞:", response.text)
        exit()



def add_food():
    print("\n=== –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –µ–¥—ã ===")
    name = input("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞: ")
    calories = input("–ö–∞–ª–æ—Ä–∏–∏: ")

    response = protected_request("post", f"{API_URL}/nutrition/", json={
        "name": name,
        "calories": calories
    })

    if response.status_code == 201:
        print("‚úÖ –ü—Ä–æ–¥—É–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω.")
        notify(f"–î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–æ–¥—É–∫—Ç: {name}, {calories} –∫–∫–∞–ª.")
    else:
        print("‚ùå –û—à–∏–±–∫–∞:", response.text)
        exit()


def edit_food():
    print("\n=== –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –µ–¥—ã ===")
    foods = list_items("nutrition")
    for f in foods:
        print(f"{f['id']}: {f['name']} - {f['calories']} –∫–∫–∞–ª")

    food_id = input("–í–≤–µ–¥–∏—Ç–µ ID –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ")
    new_name = input("–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ")
    new_calories = input("–ù–æ–≤–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å: ")

    response = protected_request("patch", f"{API_URL}/nutrition/{food_id}/", json={
        "name": new_name,
        "calories": new_calories
    })

    if response.status_code == 200:
        print("‚úÖ –ü—Ä–æ–¥—É–∫—Ç –æ–±–Ω–æ–≤–ª—ë–Ω.")
        notify(f"–û–±–Ω–æ–≤–ª—ë–Ω –ø—Ä–æ–¥—É–∫—Ç ID {food_id}: {new_name}, {new_calories} –∫–∫–∞–ª.")
    else:
        print("‚ùå –û—à–∏–±–∫–∞:", response.text)
        exit()


def delete_food():
    print("\n=== –£–¥–∞–ª–µ–Ω–∏–µ –µ–¥—ã ===")
    foods = list_items("nutrition")
    for f in foods:
        print(f"{f['id']}: {f['name']} - {f['calories']} –∫–∫–∞–ª")

    food_id = input("–í–≤–µ–¥–∏—Ç–µ ID –ø—Ä–æ–¥—É–∫—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ")

    response = protected_request("delete", f"{API_URL}/nutrition/{food_id}/")
    if response.status_code == 204:
        print("‚úÖ –ü—Ä–æ–¥—É–∫—Ç —É–¥–∞–ª—ë–Ω.")
        notify(f"–£–¥–∞–ª—ë–Ω –ø—Ä–æ–¥—É–∫—Ç ID {food_id}.")
    else:
        print("‚ùå –û—à–∏–±–∫–∞:", response.text)
        exit()



def authenticated_menu():
    while True:
        print("\n–ú–µ–Ω—é:")
        print("1. –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É")
        print("2. –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –ø–∏—Ç–∞–Ω–∏—è")
        print("3. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É")
        print("4. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç –ø–∏—Ç–∞–Ω–∏—è")
        print("5. –£–¥–∞–ª–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É")
        print("6. –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –ø–∏—Ç–∞–Ω–∏—è")
        print("7. –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á—ë—Ç")
        print("8. –í—ã–π—Ç–∏")

        choice = input("–í—ã–±–æ—Ä: ")
        if choice == "1":
            add_workout()
        elif choice == "2":
            add_food()
        elif choice == "3":
            edit_workout()
        elif choice == "4":
            edit_food()
        elif choice == "5":
            delete_workout()
        elif choice == "6":
            delete_food()
        elif choice == "7":
            show_summary()
        elif choice == "8":
            break
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.")


def main_menu():
    while True:
        global access_token
        if access_token is None:
            print("\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")
            print("1. –í—Ö–æ–¥")
            print("2. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
            print("3. –í—ã—Ö–æ–¥")
            choice = input("–í—ã–±–æ—Ä: ")
            if choice == "1":
                login()
            elif choice == "2":
                register()
            elif choice == "3":
                break
            else:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.")
        else:
            authenticated_menu()
            access_token = None


if __name__ == "__main__":
    main_menu()
